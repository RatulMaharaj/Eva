{"version":3,"sources":["components/Logo.js","components/Update.js","components/Settings.js","components/SearchResult.js","components/Search.js","index.js"],"names":["Logo","style","color","display","justifyContent","alignItems","className","fontFamily","fontWeight","fontSize","margin","letterSpacing","Update","props","folders","setFolders","isUpdating","setIsUpdating","useState","postRequest","setPostRequest","useEffect","console","log","data","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","marginRight","size","loading","id","defaultValue","onChange","event","target","value","onClick","Settings","version","setVersion","modTime","setModTime","updateTime","setUpdateTime","res","modtime","updatetime","padding","to","marginTop","SearchResult","showCopyMessage","setShowCopyMessage","timer","setTimeout","clearTimeout","key","path","name","delimiter","currentOS","navigator","clipboard","writeText","handleCopyToClipboard","flexDirection","marginLeft","Search","setCurrentOS","hits","results","returned_hits","searchcriteria","setResponse","getResults","setGetResults","q","input","setInput","onSubmit","e","preventDefault","autoFocus","placeholder","type","currentTarget","map","result","ReactDOM","render","exact","document","getElementById"],"mappings":"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","file":"static/js/main.9aadaed9.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Logo() {\n  return (\n    <h2\n      style={{\n        color: `var(--accent)`,\n        display: `flex`,\n        justifyContent: `center`,\n        alignItems: `center`,\n      }}\n    >\n      <span className=\"logo\">Eva</span>\n      <span\n        style={{\n          fontFamily: \"Century Gothic\",\n          fontWeight: `700`,\n          fontSize: `11px`,\n          color: `var(--light-grey)`,\n          margin: `0 0.65em`,\n        }}\n      >\n        FROM\n      </span>\n      <span\n        style={{\n          fontFamily: \"Century Gothic\",\n          fontWeight: \"700\",\n          fontSize: `25px`,\n          letterSpacing: `1.5px`,\n          color: \"#50B848\",\n        }}\n      >\n        O\n      </span>\n      <span\n        style={{\n          fontFamily: \"Century Gothic\",\n          fontWeight: \"700\",\n          fontSize: `25px`,\n          letterSpacing: `1.5px`,\n          color: \"#F37024\",\n        }}\n      >\n        M\n      </span>\n      <span\n        style={{\n          fontFamily: \"Century Gothic\",\n          fontWeight: \"700\",\n          fontSize: `25px`,\n          letterSpacing: `1.5px`,\n          color: \"#ED0E81\",\n        }}\n      >\n        A\n      </span>\n      <span\n        style={{\n          fontFamily: \"Century Gothic\",\n          fontWeight: \"700\",\n          fontSize: `25px`,\n          letterSpacing: `1.5px`,\n          color: \"#099678\",\n        }}\n      >\n        R\n      </span>\n      <span\n        style={{\n          fontFamily: \"Century Gothic\",\n          fontWeight: \"700\",\n          fontSize: `25px`,\n          letterSpacing: `1.5px`,\n          color: \"#0CC1E9\",\n        }}\n      >\n        T\n      </span>\n    </h2>\n  );\n}\n\nexport default Logo;\n","import React, { useState, useEffect } from \"react\";\nimport Spinner from \"react-spinners/PulseLoader\";\n\nfunction Update(props) {\n  const { folders, setFolders, isUpdating, setIsUpdating } = props;\n  const [postRequest, setPostRequest] = useState(false);\n\n  function handleClick() {\n    setPostRequest(true);\n  }\n\n  useEffect(() => {\n    if (postRequest === true) {\n      console.log(\"Sending post request\");\n      const data = { folders: folders };\n\n      fetch(\"api/settings\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"Success:\", data);\n          setPostRequest(false);\n          setIsUpdating(\"no\");\n        })\n        .catch((error) => {\n          console.error(\"Error:\", error);\n          setPostRequest(false);\n          setIsUpdating(\"no\");\n        });\n    }\n  }, [folders, setFolders, postRequest, isUpdating, setIsUpdating]);\n\n  return (\n    <>\n      <div style={{ display: `flex` }}>\n        <h4 style={{ marginRight: `1em` }}>Update Now</h4>\n        <Spinner\n          size={8}\n          margin={2}\n          loading={postRequest || isUpdating === \"yes\"}\n        />\n      </div>\n      <br />\n      <p>\n        Please enter the paths of the folders you would like to be indexed. Each\n        path should be on a new line.\n      </p>\n      <br />\n      <form>\n        <div className=\"IndexTheseFolders\">\n          <textarea\n            className=\"folder-list\"\n            id=\"folders\"\n            defaultValue={props.folders}\n            onChange={(event) => setFolders(event.target.value)}\n          ></textarea>\n        </div>\n      </form>\n      <button className=\"button\" onClick={(event) => handleClick()}>\n        Update Now\n      </button>\n      <br />\n      <br />\n      <br />\n    </>\n  );\n}\n\nexport default Update;\n","import React, { useState, useEffect } from \"react\";\nimport Logo from \"./Logo\";\nimport { Link } from \"react-router-dom\";\nimport Update from \"./Update\";\n\nfunction Settings() {\n  const [folders, setFolders] = useState(\"\");\n  const [version, setVersion] = useState(\"\");\n  const [modTime, setModTime] = useState(\"\");\n  const [updateTime, setUpdateTime] = useState(\"\");\n  const [isUpdating, setIsUpdating] = useState(\"\");\n\n  const getRequest = () => {\n    fetch(\"/api/settings\")\n      .then((res) => res.json())\n      .then((data) => {\n        setFolders(data.folders);\n        setVersion(data.version);\n        setModTime(data.modtime);\n        setUpdateTime(data.updatetime);\n        setIsUpdating(data.isUpdating);\n      });\n  };\n\n  useEffect(() => {\n    getRequest();\n  }, []);\n\n  return (\n    <div>\n      <div style={{ padding: `2em 0` }}>\n        <Link to=\"/\">\n          <Logo />\n        </Link>\n      </div>\n      <div className=\"content\" style={{ marginTop: `0em` }}>\n        <h4>About</h4>\n        <br />\n        <p>\n          Eva is a search tool whose purpose is to assist it's users with\n          finding files quickly and easily.\n        </p>\n        <br />\n        <br />\n        <h4>Version</h4>\n        <br />\n\n        <p>\n          You are currently using Eva version{\" \"}\n          <strong style={{ color: `var(--green)` }}>{version}</strong>\n        </p>\n        <br />\n        <br />\n        <h4>Last Update</h4>\n        <br />\n\n        <p>\n          This application uses a static database to look up the locations of\n          files.\n        </p>\n        <br />\n        <p>\n          The database was last updated on: <strong>{modTime}</strong> and took{\" \"}\n          <strong>{updateTime}</strong> to update.\n        </p>\n        <br />\n        <br />\n\n        <Update\n          folders={folders}\n          setFolders={setFolders}\n          isUpdating={isUpdating}\n          setIsUpdating={setIsUpdating}\n        />\n\n        <h4>Created By</h4>\n        <br />\n        <p>Ratul Maharaj & Simey de Klerk</p>\n        <br />\n        <p>20 February 2020</p>\n        <br />\n        <br />\n      </div>\n    </div>\n  );\n}\n\nexport default Settings;\n","import React, { useEffect, useState } from \"react\";\nimport { IoCopyOutline } from \"react-icons/io5\";\n\nfunction SearchResult(props) {\n  const [showCopyMessage, setShowCopyMessage] = useState(false);\n\n  function handleCopyToClipboard(name, path) {\n    var delimiter = \"/\";\n    if (props.currentOS !== \"macos\") {\n      delimiter = `\\\\`;\n    }\n    navigator.clipboard.writeText(path + delimiter + name);\n  }\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowCopyMessage(false);\n    }, 1500);\n    return () => clearTimeout(timer);\n  }, [showCopyMessage]);\n\n  return (\n    <div className=\"search-content-section\" key={props.path + props.name}>\n      <div className=\"search_result\">\n        <div>\n          <div className=\"search_name\">{props.name}</div>\n          <div className=\"search_path\">{props.path}</div>\n        </div>\n\n        <div\n          style={{\n            display: `flex`,\n            alignItems: `center`,\n            justifyContent: `flex-end`,\n          }}\n        >\n          {props.name !== \"Search for a file\" ? (\n            <IoCopyOutline\n              onClick={() => {\n                setShowCopyMessage(true);\n                handleCopyToClipboard(props.name, props.path);\n              }}\n            />\n          ) : null}\n          <div\n            style={{\n              fontSize: `10px`,\n              display: `flex`,\n              flexDirection: `column`,\n              justifyContent: `center`,\n              marginLeft: `0.5em`,\n            }}\n          >\n            {showCopyMessage ? `COPIED!` : ``}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchResult;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Search.css\";\nimport Logo from \"./Logo\";\nimport SearchResult from \"./SearchResult\";\n\nfunction Search() {\n  const [currentOS, setCurrentOS] = useState(\"\");\n  const [response, setResponse] = useState({\n    hits: 0,\n    results: [],\n    returned_hits: 0,\n    searchcriteria: \"\",\n  });\n\n  // custom hook to handle input changes\n  const [getResults, setGetResults] = useState(false);\n  const [input, setInput] = useState({ q: \"\" });\n\n  const handleInputChange = (e) => {\n    setInput({\n      ...input,\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setGetResults(true);\n  };\n\n  useEffect(() => {\n    fetch(`/api/os`)\n      .then((res) => res.json())\n      .then((data) => setCurrentOS(data[\"os\"]))\n      .catch((error) => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    fetch(`/api/search?q=${input.q}`)\n      .then((res) => res.json())\n      .then((data) => setResponse(data))\n      .catch((error) => console.log(error));\n  }, [input, getResults]);\n\n  return (\n    <div>\n      <div className=\"content_header\">\n        <div className=\"searchresults_heading\">\n          <Logo />\n        </div>\n        <div className=\"results_searchbar\">\n          <form id=\"search-form\" onSubmit={handleSubmit}>\n            <input\n              id=\"search-box\"\n              autoFocus\n              placeholder=\"Search for a file\"\n              name=\"q\"\n              type=\"searchx\"\n              defaultValue={response.searchcriteria}\n              onChange={handleInputChange}\n            />\n          </form>\n        </div>\n        <div className=\"header_links\">\n          <Link to=\"settings\">\n            <i\n              style={{ color: `var(--light-grey)` }}\n              className=\"material-icons nav-item-icon\"\n            >\n              settings\n            </i>\n          </Link>\n        </div>\n      </div>\n      <div className=\"content\">\n        {response.results.map((result) => {\n          return (\n            <SearchResult\n              key={result.path + result.name}\n              currentOS={currentOS}\n              name={result.name}\n              path={result.path}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./static/css/main.css\";\nimport \"@fontsource/bitter\";\nimport \"@fontsource/kalam\";\nimport Settings from \"./components/Settings\";\nimport Search from \"./components/Search\";\n\nReactDOM.render(\n  <Router>\n    <div>\n      <Switch>\n        <Route exact path=\"/\">\n          <Search />\n        </Route>\n        <Route path=\"/settings\">\n          <Settings />\n        </Route>\n      </Switch>\n    </div>\n  </Router>,\n  document.getElementById(\"main\")\n);\n"],"sourceRoot":""}